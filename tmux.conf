# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# THIS VERSION IS FOR X1C5-GENTOO
# WS-GENTOO VERSION HAS DIFFERENT COLORS
# TODO: ISOLATE HOST SPECIFICS

set-window-option -g mode-keys vi

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# select session
bind S choose-session

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

bind , previous-window
bind . next-window

bind-key n command-prompt 'rename-window %%'
bind-key N command-prompt 'rename-session %%'

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

set -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -g buffer-limit 8192

# More accessable prefix key
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g status-bg colour111
set -g status-fg colour017

set -g pane-border-fg colour111
set -g pane-active-border-fg colour017

setw -g window-status-attr dim
setw -g window-status-current-attr bright
#status bar
set -g status-right "\"#H\" %b/%d(%a) %H:%M "

set -g aggressive-resize

bind-key -T copy-mode-vi y send-keys -X copy-pipe "xsel --clipboard --input"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key p run "xsel --output --primary | tmux load-buffer - ; tmux paste-buffer"

# Input escape after 10ms - should be enough time to enter successive keys as part of shortcut
set -s escape-time 10
